//! Contains the optable that maps all opcodes to their respective instruction.
//! Taken from the opcode reference at <https://gbdev.io/gb-opcodes/optables/>
use crate::cpu::instructions::parameter::{
    JumpTest, LoadByteSource, LoadByteTarget, LoadType, StackTarget, TargetRegister16,
};
use crate::cpu::instructions::{Instruction, TargetRegister8};
use crate::cpu::registers::U3;

/// Gets the instruction associated with the opcode without the `0xCB` prefix.
/// The invalid opcodes return [`None`].
pub(super) fn get_opcode_unprefixed(byte: u8) -> Option<Instruction> {
    let instruction = match byte {
        0x00 => Instruction::Nop,
        0x01 => todo!("LD BC, A"),
        0x02 => todo!("LD [BC], A"),
        0x03 => todo!("INC BC"),
        0x04 => Instruction::Inc(TargetRegister8::B),
        0x05 => Instruction::Dec(TargetRegister8::B),
        0x06 => todo!("LD B, n8"),
        0x07 => Instruction::Rlca,
        0x08 => todo!("LD [a16], SP"),
        0x09 => Instruction::AddHl(TargetRegister16::BC),
        0x0A => todo!("LD A, [BC]"),
        0x0B => todo!("DEC BC"),
        0x0C => Instruction::Inc(TargetRegister8::C),
        0x0D => Instruction::Dec(TargetRegister8::C),
        0x0E => todo!("LD C, n8"),
        0x0F => Instruction::Rrca,

        0x10 => todo!("STOP"),
        0x11 => todo!("LD DE, A"),
        0x12 => todo!("LD [DE], A"),
        0x13 => todo!("INC DE"),
        0x14 => Instruction::Inc(TargetRegister8::D),
        0x15 => Instruction::Dec(TargetRegister8::D),
        0x16 => todo!("LD D, n8"),
        0x17 => Instruction::Rla,
        0x18 => todo!("JR e8"),
        0x19 => Instruction::AddHl(TargetRegister16::DE),
        0x1A => todo!("LD A, [DE]"),
        0x1B => todo!("DEC DE"),
        0x1C => Instruction::Inc(TargetRegister8::E),
        0x1D => Instruction::Dec(TargetRegister8::E),
        0x1E => todo!("LD E, n8"),
        0x1F => Instruction::Rra,

        0x20 => todo!("JR NZ, e8"),
        0x21 => todo!("LD [HLI], A"),
        0x22 => todo!("LD [HLI], A"),
        0x23 => todo!("INC HL"),
        0x24 => Instruction::Inc(TargetRegister8::H),
        0x25 => Instruction::Dec(TargetRegister8::H),
        0x26 => todo!("LD H, n8"),
        0x27 => todo!("DAA"),
        0x28 => todo!("JR Z, e8"),
        0x29 => Instruction::AddHl(TargetRegister16::HL),
        0x2A => todo!("LD A, [HLI]"),
        0x2B => todo!("DEC HL"),
        0x2C => Instruction::Inc(TargetRegister8::L),
        0x2D => Instruction::Dec(TargetRegister8::L),
        0x2E => todo!("LD L, n8"),
        0x2F => Instruction::Cpl,

        0x30 => todo!("JR NC, e8"),
        0x31 => todo!("LD [SP], A"),
        0x32 => todo!("LD [HLD], A"),
        0x33 => todo!("INC SP"),
        0x34 => todo!("INC [HL]"),
        0x35 => todo!("DEC [HL]"),
        0x36 => todo!("LD [HL], n8"),
        0x37 => Instruction::Scf,
        0x38 => todo!("JR C, e8"),
        0x39 => todo!("ADD HL SP"),
        0x3A => todo!("LD A, [HLD]"),
        0x3B => todo!("DEC SP"),
        0x3C => Instruction::Inc(TargetRegister8::A),
        0x3D => Instruction::Dec(TargetRegister8::A),
        0x3E => todo!("LD A, n8"),
        0x3F => Instruction::Ccf,

        0x40 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::B)),
        0x41 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::C)),
        0x42 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::D)),
        0x43 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::E)),
        0x44 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::H)),
        0x45 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::L)),
        0x46 => todo!("LD B, [HL]"),
        0x47 => Instruction::Ld(LoadType::Byte(LoadByteTarget::B, LoadByteSource::A)),
        0x48 => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::B)),
        0x49 => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::C)),
        0x4A => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::D)),
        0x4B => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::E)),
        0x4C => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::H)),
        0x4D => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::L)),
        0x4E => todo!("LD C, [HL]"),
        0x4F => Instruction::Ld(LoadType::Byte(LoadByteTarget::C, LoadByteSource::A)),

        0x50 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::B)),
        0x51 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::C)),
        0x52 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::D)),
        0x53 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::E)),
        0x54 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::H)),
        0x55 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::L)),
        0x56 => todo!("LD D, [HL]"),
        0x57 => Instruction::Ld(LoadType::Byte(LoadByteTarget::D, LoadByteSource::A)),
        0x58 => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::B)),
        0x59 => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::C)),
        0x5A => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::D)),
        0x5B => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::E)),
        0x5C => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::H)),
        0x5D => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::L)),
        0x5E => todo!("LD E, [HL]"),
        0x5F => Instruction::Ld(LoadType::Byte(LoadByteTarget::E, LoadByteSource::A)),

        0x60 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::B)),
        0x61 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::C)),
        0x62 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::D)),
        0x63 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::E)),
        0x64 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::H)),
        0x65 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::L)),
        0x66 => todo!("LD H, [HL]"),
        0x67 => Instruction::Ld(LoadType::Byte(LoadByteTarget::H, LoadByteSource::A)),
        0x68 => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::B)),
        0x69 => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::C)),
        0x6A => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::D)),
        0x6B => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::E)),
        0x6C => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::H)),
        0x6D => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::L)),
        0x6E => todo!("LD L, [HL]"),
        0x6F => Instruction::Ld(LoadType::Byte(LoadByteTarget::L, LoadByteSource::A)),

        0x70 => todo!("LD [HL], B"),
        0x71 => todo!("LD [HL], C"),
        0x72 => todo!("LD [HL], D"),
        0x73 => todo!("LD [HL], E"),
        0x74 => todo!("LD [HL], H"),
        0x75 => todo!("LD [HL], L"),
        0x76 => Instruction::Halt,
        0x77 => todo!("LD [HL], A"),
        0x78 => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::B)),
        0x79 => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::C)),
        0x7A => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::D)),
        0x7B => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::E)),
        0x7C => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::H)),
        0x7D => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::L)),
        0x7E => todo!("LD A, [HL]"),
        0x7F => Instruction::Ld(LoadType::Byte(LoadByteTarget::A, LoadByteSource::A)),

        0x80 => Instruction::Add(TargetRegister8::B),
        0x81 => Instruction::Add(TargetRegister8::C),
        0x82 => Instruction::Add(TargetRegister8::D),
        0x83 => Instruction::Add(TargetRegister8::E),
        0x84 => Instruction::Add(TargetRegister8::H),
        0x85 => Instruction::Add(TargetRegister8::L),
        0x86 => todo!("ADD [HL]"),
        0x87 => Instruction::Add(TargetRegister8::A),
        0x88 => Instruction::Adc(TargetRegister8::B),
        0x89 => Instruction::Adc(TargetRegister8::C),
        0x8A => Instruction::Adc(TargetRegister8::D),
        0x8B => Instruction::Adc(TargetRegister8::E),
        0x8C => Instruction::Adc(TargetRegister8::H),
        0x8D => Instruction::Adc(TargetRegister8::L),
        0x8E => todo!("ADC [HL]"),
        0x8F => Instruction::Adc(TargetRegister8::A),

        0x90 => Instruction::Sub(TargetRegister8::B),
        0x91 => Instruction::Sub(TargetRegister8::C),
        0x92 => Instruction::Sub(TargetRegister8::D),
        0x93 => Instruction::Sub(TargetRegister8::E),
        0x94 => Instruction::Sub(TargetRegister8::H),
        0x95 => Instruction::Sub(TargetRegister8::L),
        0x96 => todo!("SUB [HL]"),
        0x97 => Instruction::Sub(TargetRegister8::A),
        0x98 => Instruction::Sbc(TargetRegister8::B),
        0x99 => Instruction::Sbc(TargetRegister8::C),
        0x9A => Instruction::Sbc(TargetRegister8::D),
        0x9B => Instruction::Sbc(TargetRegister8::E),
        0x9C => Instruction::Sbc(TargetRegister8::H),
        0x9D => Instruction::Sbc(TargetRegister8::L),
        0x9E => todo!("SBC [HL]"),
        0x9F => Instruction::Sbc(TargetRegister8::A),

        0xA0 => Instruction::And(TargetRegister8::B),
        0xA1 => Instruction::And(TargetRegister8::C),
        0xA2 => Instruction::And(TargetRegister8::D),
        0xA3 => Instruction::And(TargetRegister8::E),
        0xA4 => Instruction::And(TargetRegister8::H),
        0xA5 => Instruction::And(TargetRegister8::L),
        0xA6 => todo!("AND [HL]"),
        0xA7 => Instruction::And(TargetRegister8::A),
        0xA8 => Instruction::Xor(TargetRegister8::B),
        0xA9 => Instruction::Xor(TargetRegister8::C),
        0xAA => Instruction::Xor(TargetRegister8::D),
        0xAB => Instruction::Xor(TargetRegister8::E),
        0xAC => Instruction::Xor(TargetRegister8::H),
        0xAD => Instruction::Xor(TargetRegister8::L),
        0xAE => todo!("XOR [HL]"),
        0xAF => Instruction::Xor(TargetRegister8::A),

        0xB0 => Instruction::Or(TargetRegister8::B),
        0xB1 => Instruction::Or(TargetRegister8::C),
        0xB2 => Instruction::Or(TargetRegister8::D),
        0xB3 => Instruction::Or(TargetRegister8::E),
        0xB4 => Instruction::Or(TargetRegister8::H),
        0xB5 => Instruction::Or(TargetRegister8::L),
        0xB6 => todo!("OR [HL]"),
        0xB7 => Instruction::Or(TargetRegister8::A),
        0xB8 => Instruction::Cp(TargetRegister8::B),
        0xB9 => Instruction::Cp(TargetRegister8::C),
        0xBA => Instruction::Cp(TargetRegister8::D),
        0xBB => Instruction::Cp(TargetRegister8::E),
        0xBC => Instruction::Cp(TargetRegister8::H),
        0xBD => Instruction::Cp(TargetRegister8::L),
        0xBE => todo!("CP [HL]"),
        0xBF => Instruction::Cp(TargetRegister8::A),

        0xC0 => Instruction::Ret(JumpTest::NotZero),
        0xC1 => Instruction::Pop(StackTarget::BC),
        0xC2 => Instruction::Jp(JumpTest::NotZero),
        0xC3 => Instruction::Jp(JumpTest::Always),
        0xC4 => Instruction::Call(JumpTest::NotZero),
        0xC5 => Instruction::Push(StackTarget::BC),
        0xC6 => todo!("ADD A, n8"),
        0xC7 => todo!("RST $00"),
        0xC8 => Instruction::Ret(JumpTest::Zero),
        0xC9 => Instruction::Ret(JumpTest::Always),
        0xCA => Instruction::Jp(JumpTest::Zero),
        0xCB => panic!("Prefix instruction, should never enter this function!"),
        0xCC => Instruction::Call(JumpTest::Zero),
        0xCD => Instruction::Call(JumpTest::Always),
        0xCE => todo!("ADC A, n8"),
        0xCF => todo!("RST $08"),

        0xD0 => Instruction::Ret(JumpTest::NotCarry),
        0xD1 => Instruction::Pop(StackTarget::DE),
        0xD2 => Instruction::Jp(JumpTest::NotCarry),
        0xD3 => return None,
        0xD4 => Instruction::Call(JumpTest::NotCarry),
        0xD5 => Instruction::Push(StackTarget::DE),
        0xD6 => todo!("SUB A, n8"),
        0xD7 => todo!("RST $10"),
        0xD8 => Instruction::Ret(JumpTest::Carry),
        0xD9 => todo!("RETI"),
        0xDA => Instruction::Jp(JumpTest::Carry),
        0xDB => return None,
        0xDC => Instruction::Call(JumpTest::Carry),
        0xDD => return None,
        0xDE => todo!("SBC A, n8"),
        0xDF => todo!("RST $18"),

        0xE0 => todo!("LDH [a8], A"),
        0xE1 => Instruction::Pop(StackTarget::HL),
        0xE2 => todo!("LDH [C], A"),
        0xE3 => return None,
        0xE4 => return None,
        0xE5 => Instruction::Push(StackTarget::HL),
        0xE6 => todo!("AND A, n8"),
        0xE7 => todo!("RST $20"),
        0xE8 => todo!("ADD SP, e8"),
        0xE9 => todo!("JP HL"),
        0xEA => todo!("LD [a16], A"),
        0xEB => return None,
        0xEC => return None,
        0xED => return None,
        0xEE => todo!("XOR A, n8"),
        0xEF => todo!("RST $28"),

        0xF0 => todo!("LDH A, [a8]"),
        0xF1 => Instruction::Pop(StackTarget::AF),
        0xF2 => todo!("LDH [C], A"),
        0xF3 => todo!("DI"),
        0xF4 => return None,
        0xF5 => Instruction::Push(StackTarget::AF),
        0xF6 => todo!("OR A, n8"),
        0xF7 => todo!("RST $30"),
        0xF8 => todo!("LD HL, SP + e8"),
        0xF9 => todo!("LD SP, HL"),
        0xFA => todo!("LD A, [a16]"),
        0xFB => todo!("EI"),
        0xFC => return None,
        0xFD => return None,
        0xFE => todo!("CP A, n8"),
        0xFF => todo!("RST $38"),
    };
    Some(instruction)
}

/// Gets the instruction associated with the opcode that is prefixed with `0xCB`.
/// These consist entirely of 8-bit shift, rotate and bit instructions.
/// Every opcode is valid, so does not return a `Option`.
pub(super) fn get_opcode_prefixed(byte: u8) -> Instruction {
    match byte {
        0x00 => Instruction::Rlc(TargetRegister8::B),
        0x01 => Instruction::Rlc(TargetRegister8::C),
        0x02 => Instruction::Rlc(TargetRegister8::D),
        0x03 => Instruction::Rlc(TargetRegister8::E),
        0x04 => Instruction::Rlc(TargetRegister8::H),
        0x05 => Instruction::Rlc(TargetRegister8::L),
        0x06 => todo!("RLC [HL]"),
        0x07 => Instruction::Rlc(TargetRegister8::A),
        0x08 => Instruction::Rrc(TargetRegister8::B),
        0x09 => Instruction::Rrc(TargetRegister8::C),
        0x0A => Instruction::Rrc(TargetRegister8::D),
        0x0B => Instruction::Rrc(TargetRegister8::E),
        0x0C => Instruction::Rrc(TargetRegister8::H),
        0x0D => Instruction::Rrc(TargetRegister8::L),
        0x0E => todo!("RRC [HL]"),
        0x0F => Instruction::Rrc(TargetRegister8::A),

        0x10 => Instruction::Rl(TargetRegister8::B),
        0x11 => Instruction::Rl(TargetRegister8::C),
        0x12 => Instruction::Rl(TargetRegister8::D),
        0x13 => Instruction::Rl(TargetRegister8::E),
        0x14 => Instruction::Rl(TargetRegister8::H),
        0x15 => Instruction::Rl(TargetRegister8::L),
        0x16 => todo!("RL [HL]"),
        0x17 => Instruction::Rl(TargetRegister8::A),
        0x18 => Instruction::Rr(TargetRegister8::B),
        0x19 => Instruction::Rr(TargetRegister8::C),
        0x1A => Instruction::Rr(TargetRegister8::D),
        0x1B => Instruction::Rr(TargetRegister8::E),
        0x1C => Instruction::Rr(TargetRegister8::H),
        0x1D => Instruction::Rr(TargetRegister8::L),
        0x1E => todo!("RR [HL]"),
        0x1F => Instruction::Rr(TargetRegister8::A),

        0x20 => Instruction::Sla(TargetRegister8::B),
        0x21 => Instruction::Sla(TargetRegister8::C),
        0x22 => Instruction::Sla(TargetRegister8::D),
        0x23 => Instruction::Sla(TargetRegister8::E),
        0x24 => Instruction::Sla(TargetRegister8::H),
        0x25 => Instruction::Sla(TargetRegister8::L),
        0x26 => todo!("SLA [HL]"),
        0x27 => Instruction::Sla(TargetRegister8::A),
        0x28 => Instruction::Sra(TargetRegister8::B),
        0x29 => Instruction::Sra(TargetRegister8::C),
        0x2A => Instruction::Sra(TargetRegister8::D),
        0x2B => Instruction::Sra(TargetRegister8::E),
        0x2C => Instruction::Sra(TargetRegister8::H),
        0x2D => Instruction::Sra(TargetRegister8::L),
        0x2E => todo!("SRA [HL]"),
        0x2F => Instruction::Swap(TargetRegister8::A),

        0x30 => Instruction::Swap(TargetRegister8::B),
        0x31 => Instruction::Swap(TargetRegister8::C),
        0x32 => Instruction::Swap(TargetRegister8::D),
        0x33 => Instruction::Swap(TargetRegister8::E),
        0x34 => Instruction::Swap(TargetRegister8::H),
        0x35 => Instruction::Swap(TargetRegister8::L),
        0x36 => todo!("SWAP [HL]"),
        0x37 => Instruction::Swap(TargetRegister8::A),
        0x38 => Instruction::Srl(TargetRegister8::B),
        0x39 => Instruction::Srl(TargetRegister8::C),
        0x3A => Instruction::Srl(TargetRegister8::D),
        0x3B => Instruction::Srl(TargetRegister8::E),
        0x3C => Instruction::Srl(TargetRegister8::H),
        0x3D => Instruction::Srl(TargetRegister8::L),
        0x3E => todo!("SRA [HL]"),
        0x3F => Instruction::Srl(TargetRegister8::A),

        0x40 => Instruction::Bit(U3::wrap(0), TargetRegister8::B),
        0x41 => Instruction::Bit(U3::wrap(0), TargetRegister8::C),
        0x42 => Instruction::Bit(U3::wrap(0), TargetRegister8::D),
        0x43 => Instruction::Bit(U3::wrap(0), TargetRegister8::E),
        0x44 => Instruction::Bit(U3::wrap(0), TargetRegister8::H),
        0x45 => Instruction::Bit(U3::wrap(0), TargetRegister8::L),
        0x46 => todo!("BIT 0 [HL]"),
        0x47 => Instruction::Bit(U3::wrap(0), TargetRegister8::A),
        0x48 => Instruction::Bit(U3::wrap(1), TargetRegister8::B),
        0x49 => Instruction::Bit(U3::wrap(1), TargetRegister8::C),
        0x4A => Instruction::Bit(U3::wrap(1), TargetRegister8::D),
        0x4B => Instruction::Bit(U3::wrap(1), TargetRegister8::E),
        0x4C => Instruction::Bit(U3::wrap(1), TargetRegister8::H),
        0x4D => Instruction::Bit(U3::wrap(1), TargetRegister8::L),
        0x4E => todo!("BIT 1 [HL]"),
        0x4F => Instruction::Bit(U3::wrap(1), TargetRegister8::A),

        0x50 => Instruction::Bit(U3::wrap(2), TargetRegister8::B),
        0x51 => Instruction::Bit(U3::wrap(2), TargetRegister8::C),
        0x52 => Instruction::Bit(U3::wrap(2), TargetRegister8::D),
        0x53 => Instruction::Bit(U3::wrap(2), TargetRegister8::E),
        0x54 => Instruction::Bit(U3::wrap(2), TargetRegister8::H),
        0x55 => Instruction::Bit(U3::wrap(2), TargetRegister8::L),
        0x56 => todo!("BIT 2 [HL]"),
        0x57 => Instruction::Bit(U3::wrap(2), TargetRegister8::A),
        0x58 => Instruction::Bit(U3::wrap(3), TargetRegister8::B),
        0x59 => Instruction::Bit(U3::wrap(3), TargetRegister8::C),
        0x5A => Instruction::Bit(U3::wrap(3), TargetRegister8::D),
        0x5B => Instruction::Bit(U3::wrap(3), TargetRegister8::E),
        0x5C => Instruction::Bit(U3::wrap(3), TargetRegister8::H),
        0x5D => Instruction::Bit(U3::wrap(3), TargetRegister8::L),
        0x5E => todo!("BIT 3 [HL]"),
        0x5F => Instruction::Bit(U3::wrap(3), TargetRegister8::A),

        0x60 => Instruction::Bit(U3::wrap(4), TargetRegister8::B),
        0x61 => Instruction::Bit(U3::wrap(4), TargetRegister8::C),
        0x62 => Instruction::Bit(U3::wrap(4), TargetRegister8::D),
        0x63 => Instruction::Bit(U3::wrap(4), TargetRegister8::E),
        0x64 => Instruction::Bit(U3::wrap(4), TargetRegister8::H),
        0x65 => Instruction::Bit(U3::wrap(4), TargetRegister8::L),
        0x66 => todo!("BIT 4 [HL]"),
        0x67 => Instruction::Bit(U3::wrap(4), TargetRegister8::A),
        0x68 => Instruction::Bit(U3::wrap(5), TargetRegister8::B),
        0x69 => Instruction::Bit(U3::wrap(5), TargetRegister8::C),
        0x6A => Instruction::Bit(U3::wrap(5), TargetRegister8::D),
        0x6B => Instruction::Bit(U3::wrap(5), TargetRegister8::E),
        0x6C => Instruction::Bit(U3::wrap(5), TargetRegister8::H),
        0x6D => Instruction::Bit(U3::wrap(5), TargetRegister8::L),
        0x6E => todo!("BIT 5 [HL]"),
        0x6F => Instruction::Bit(U3::wrap(5), TargetRegister8::A),

        0x70 => Instruction::Bit(U3::wrap(6), TargetRegister8::B),
        0x71 => Instruction::Bit(U3::wrap(6), TargetRegister8::C),
        0x72 => Instruction::Bit(U3::wrap(6), TargetRegister8::D),
        0x73 => Instruction::Bit(U3::wrap(6), TargetRegister8::E),
        0x74 => Instruction::Bit(U3::wrap(6), TargetRegister8::H),
        0x75 => Instruction::Bit(U3::wrap(6), TargetRegister8::L),
        0x76 => todo!("BIT 6 [HL]"),
        0x77 => Instruction::Bit(U3::wrap(6), TargetRegister8::A),
        0x78 => Instruction::Bit(U3::wrap(7), TargetRegister8::B),
        0x79 => Instruction::Bit(U3::wrap(7), TargetRegister8::C),
        0x7A => Instruction::Bit(U3::wrap(7), TargetRegister8::D),
        0x7B => Instruction::Bit(U3::wrap(7), TargetRegister8::E),
        0x7C => Instruction::Bit(U3::wrap(7), TargetRegister8::H),
        0x7D => Instruction::Bit(U3::wrap(7), TargetRegister8::L),
        0x7E => todo!("BIT 7 [HL]"),
        0x7F => Instruction::Bit(U3::wrap(7), TargetRegister8::A),

        0x80 => Instruction::Res(U3::wrap(0), TargetRegister8::B),
        0x81 => Instruction::Res(U3::wrap(0), TargetRegister8::C),
        0x82 => Instruction::Res(U3::wrap(0), TargetRegister8::D),
        0x83 => Instruction::Res(U3::wrap(0), TargetRegister8::E),
        0x84 => Instruction::Res(U3::wrap(0), TargetRegister8::H),
        0x85 => Instruction::Res(U3::wrap(0), TargetRegister8::L),
        0x86 => todo!("RES 0 [HL]"),
        0x87 => Instruction::Res(U3::wrap(0), TargetRegister8::A),
        0x88 => Instruction::Res(U3::wrap(1), TargetRegister8::B),
        0x89 => Instruction::Res(U3::wrap(1), TargetRegister8::C),
        0x8A => Instruction::Res(U3::wrap(1), TargetRegister8::D),
        0x8B => Instruction::Res(U3::wrap(1), TargetRegister8::E),
        0x8C => Instruction::Res(U3::wrap(1), TargetRegister8::H),
        0x8D => Instruction::Res(U3::wrap(1), TargetRegister8::L),
        0x8E => todo!("RES 1 [HL]"),
        0x8F => Instruction::Res(U3::wrap(1), TargetRegister8::A),

        0x90 => Instruction::Res(U3::wrap(2), TargetRegister8::B),
        0x91 => Instruction::Res(U3::wrap(2), TargetRegister8::C),
        0x92 => Instruction::Res(U3::wrap(2), TargetRegister8::D),
        0x93 => Instruction::Res(U3::wrap(2), TargetRegister8::E),
        0x94 => Instruction::Res(U3::wrap(2), TargetRegister8::H),
        0x95 => Instruction::Res(U3::wrap(2), TargetRegister8::L),
        0x96 => todo!("RES 2 [HL]"),
        0x97 => Instruction::Res(U3::wrap(2), TargetRegister8::A),
        0x98 => Instruction::Res(U3::wrap(3), TargetRegister8::B),
        0x99 => Instruction::Res(U3::wrap(3), TargetRegister8::C),
        0x9A => Instruction::Res(U3::wrap(3), TargetRegister8::D),
        0x9B => Instruction::Res(U3::wrap(3), TargetRegister8::E),
        0x9C => Instruction::Res(U3::wrap(3), TargetRegister8::H),
        0x9D => Instruction::Res(U3::wrap(3), TargetRegister8::L),
        0x9E => todo!("RES 3 [HL]"),
        0x9F => Instruction::Res(U3::wrap(3), TargetRegister8::A),

        0xA0 => Instruction::Res(U3::wrap(4), TargetRegister8::B),
        0xA1 => Instruction::Res(U3::wrap(4), TargetRegister8::C),
        0xA2 => Instruction::Res(U3::wrap(4), TargetRegister8::D),
        0xA3 => Instruction::Res(U3::wrap(4), TargetRegister8::E),
        0xA4 => Instruction::Res(U3::wrap(4), TargetRegister8::H),
        0xA5 => Instruction::Res(U3::wrap(4), TargetRegister8::L),
        0xA6 => todo!("RES 4 [HL]"),
        0xA7 => Instruction::Res(U3::wrap(4), TargetRegister8::A),
        0xA8 => Instruction::Res(U3::wrap(5), TargetRegister8::B),
        0xA9 => Instruction::Res(U3::wrap(5), TargetRegister8::C),
        0xAA => Instruction::Res(U3::wrap(5), TargetRegister8::D),
        0xAB => Instruction::Res(U3::wrap(5), TargetRegister8::E),
        0xAC => Instruction::Res(U3::wrap(5), TargetRegister8::H),
        0xAD => Instruction::Res(U3::wrap(5), TargetRegister8::L),
        0xAE => todo!("RES 5 [HL]"),
        0xAF => Instruction::Res(U3::wrap(5), TargetRegister8::A),

        0xB0 => Instruction::Res(U3::wrap(6), TargetRegister8::B),
        0xB1 => Instruction::Res(U3::wrap(6), TargetRegister8::C),
        0xB2 => Instruction::Res(U3::wrap(6), TargetRegister8::D),
        0xB3 => Instruction::Res(U3::wrap(6), TargetRegister8::E),
        0xB4 => Instruction::Res(U3::wrap(6), TargetRegister8::H),
        0xB5 => Instruction::Res(U3::wrap(6), TargetRegister8::L),
        0xB6 => todo!("RES 6 [HL]"),
        0xB7 => Instruction::Res(U3::wrap(6), TargetRegister8::A),
        0xB8 => Instruction::Res(U3::wrap(7), TargetRegister8::B),
        0xB9 => Instruction::Res(U3::wrap(7), TargetRegister8::C),
        0xBA => Instruction::Res(U3::wrap(7), TargetRegister8::D),
        0xBB => Instruction::Res(U3::wrap(7), TargetRegister8::E),
        0xBC => Instruction::Res(U3::wrap(7), TargetRegister8::H),
        0xBD => Instruction::Res(U3::wrap(7), TargetRegister8::L),
        0xBE => todo!("RES 7 [HL]"),
        0xBF => Instruction::Res(U3::wrap(7), TargetRegister8::A),

        0xC0 => Instruction::Set(U3::wrap(0), TargetRegister8::B),
        0xC1 => Instruction::Set(U3::wrap(0), TargetRegister8::C),
        0xC2 => Instruction::Set(U3::wrap(0), TargetRegister8::D),
        0xC3 => Instruction::Set(U3::wrap(0), TargetRegister8::E),
        0xC4 => Instruction::Set(U3::wrap(0), TargetRegister8::H),
        0xC5 => Instruction::Set(U3::wrap(0), TargetRegister8::L),
        0xC6 => todo!("SET 0 [HL]"),
        0xC7 => Instruction::Set(U3::wrap(0), TargetRegister8::A),
        0xC8 => Instruction::Set(U3::wrap(1), TargetRegister8::B),
        0xC9 => Instruction::Set(U3::wrap(1), TargetRegister8::C),
        0xCA => Instruction::Set(U3::wrap(1), TargetRegister8::D),
        0xCB => Instruction::Set(U3::wrap(1), TargetRegister8::E),
        0xCC => Instruction::Set(U3::wrap(1), TargetRegister8::H),
        0xCD => Instruction::Set(U3::wrap(1), TargetRegister8::L),
        0xCE => todo!("SET 1 [HL]"),
        0xCF => Instruction::Set(U3::wrap(1), TargetRegister8::A),

        0xD0 => Instruction::Set(U3::wrap(2), TargetRegister8::B),
        0xD1 => Instruction::Set(U3::wrap(2), TargetRegister8::C),
        0xD2 => Instruction::Set(U3::wrap(2), TargetRegister8::D),
        0xD3 => Instruction::Set(U3::wrap(2), TargetRegister8::E),
        0xD4 => Instruction::Set(U3::wrap(2), TargetRegister8::H),
        0xD5 => Instruction::Set(U3::wrap(2), TargetRegister8::L),
        0xD6 => todo!("SET 2 [HL]"),
        0xD7 => Instruction::Set(U3::wrap(2), TargetRegister8::A),
        0xD8 => Instruction::Set(U3::wrap(3), TargetRegister8::B),
        0xD9 => Instruction::Set(U3::wrap(3), TargetRegister8::C),
        0xDA => Instruction::Set(U3::wrap(3), TargetRegister8::D),
        0xDB => Instruction::Set(U3::wrap(3), TargetRegister8::E),
        0xDC => Instruction::Set(U3::wrap(3), TargetRegister8::H),
        0xDD => Instruction::Set(U3::wrap(3), TargetRegister8::L),
        0xDE => todo!("SET 3 [HL]"),
        0xDF => Instruction::Set(U3::wrap(3), TargetRegister8::A),

        0xE0 => Instruction::Set(U3::wrap(4), TargetRegister8::B),
        0xE1 => Instruction::Set(U3::wrap(4), TargetRegister8::C),
        0xE2 => Instruction::Set(U3::wrap(4), TargetRegister8::D),
        0xE3 => Instruction::Set(U3::wrap(4), TargetRegister8::E),
        0xE4 => Instruction::Set(U3::wrap(4), TargetRegister8::H),
        0xE5 => Instruction::Set(U3::wrap(4), TargetRegister8::L),
        0xE6 => todo!("SET 4 [HL]"),
        0xE7 => Instruction::Set(U3::wrap(4), TargetRegister8::A),
        0xE8 => Instruction::Set(U3::wrap(5), TargetRegister8::B),
        0xE9 => Instruction::Set(U3::wrap(5), TargetRegister8::C),
        0xEA => Instruction::Set(U3::wrap(5), TargetRegister8::D),
        0xEB => Instruction::Set(U3::wrap(5), TargetRegister8::E),
        0xEC => Instruction::Set(U3::wrap(5), TargetRegister8::H),
        0xED => Instruction::Set(U3::wrap(5), TargetRegister8::L),
        0xEE => todo!("SET 5 [HL]"),
        0xEF => Instruction::Set(U3::wrap(5), TargetRegister8::A),

        0xF0 => Instruction::Set(U3::wrap(6), TargetRegister8::B),
        0xF1 => Instruction::Set(U3::wrap(6), TargetRegister8::C),
        0xF2 => Instruction::Set(U3::wrap(6), TargetRegister8::D),
        0xF3 => Instruction::Set(U3::wrap(6), TargetRegister8::E),
        0xF4 => Instruction::Set(U3::wrap(6), TargetRegister8::H),
        0xF5 => Instruction::Set(U3::wrap(6), TargetRegister8::L),
        0xF6 => todo!("SET 6 [HL]"),
        0xF7 => Instruction::Set(U3::wrap(6), TargetRegister8::A),
        0xF8 => Instruction::Set(U3::wrap(7), TargetRegister8::B),
        0xF9 => Instruction::Set(U3::wrap(7), TargetRegister8::C),
        0xFA => Instruction::Set(U3::wrap(7), TargetRegister8::D),
        0xFB => Instruction::Set(U3::wrap(7), TargetRegister8::E),
        0xFC => Instruction::Set(U3::wrap(7), TargetRegister8::H),
        0xFD => Instruction::Set(U3::wrap(7), TargetRegister8::L),
        0xFE => todo!("SET 7 [HL]"),
        0xFF => Instruction::Set(U3::wrap(7), TargetRegister8::A),
    }
}
